{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","style","opacity","backgroundImage","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","key","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0cc0d49d.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n    appId: process.env.REACT_APP_APP_ID,\n  };\n  \nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\n\nconst inputStyles = {};\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"이메일\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"비밀번호\"\n          required\n          value={password}\n          className=\"authInput\"\n          onChange={onChange}\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"계정만들기\" : \"로그인\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"로그인\" : \"계정만들기\"}\n      </span>\n    </>\n  );\n};\nexport default AuthForm;","import React from \"react\";\n\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n  return (\n    <div className=\"authContainer\">\n   \n    <AuthForm />\n    <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          구글로 로그인\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          깃허브로 로그인 \n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"게시글을 정말로 삭제하시겠습니까?\");\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"글 수정\"\n              value={newNweet}\n              required\n              autoFocus\n              onChange={onChange}\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n          {isOwner && (\n            <div class=\"nweet__actions\">\n              <button onClick={onDeleteClick}>삭제</button>\n              <button onClick={toggleEditing}>수정</button>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { storageService, dbService } from \"fbase\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (event) => {\n    if (nweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(\"\");\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"말하고 싶은 한마디 !! *300자 제한\"\n          maxLength={300}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n       \n      </label>\n      <input\n       id=\"attach-file\"\n       type=\"file\"\n       accept=\"image/*\"\n       onChange={onFileChange}\n       style={{\n         opacity: 0,\n       }}\n       />\n          {attachment && (\n                  <div className=\"factoryForm__attachment\">\n                  <img\n                    src={attachment}\n                    style={{\n                      backgroundImage: attachment,\n                    }}\n                  />\n                  <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                    <span>Remove</span>\n               \n                  </div>\n                </div>\n              )}\n            </form>\n              );\n            };\n            export default NweetFactory;","import React, { useState, useEffect } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n  return (\n    <div className=\"container\">\n    <NweetFactory userObj={userObj} />\n    <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\nexport default ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n  return (\n    <div className=\"container\">\n    <form onSubmit={onSubmit} className=\"profileForm\">\n      <input\n        onChange={onChange}\n        type=\"text\"\n        autoFocus\n        placeholder=\"별명 재설정\"\n        value={newDisplayName}\n        className=\"formInput\"\n      />\n      <input\n        type=\"submit\"\n        value=\"Update Profile\"\n        className=\"formBtn\"\n        style={{\n          marginTop: 10,\n        }}\n      />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        로그아웃\n      </span>\n    </div>\n  );\n};","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n         \n        </Link>\n      </li>\n      <li>\n\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n         \n            {userObj.displayName\n              ? `${userObj.displayName}의 프로필`\n              : \"Profile\"}\n         \n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\nexport default Navigation;","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n                   <div\n                   style={{\n                     maxWidth: 890,\n                     width: \"100%\",\n                     margin: \"0 auto\",\n                     marginTop: 80,\n                     display: \"flex\",\n                     justifyContent: \"center\",\n                   }}\n                 >\n                   <Route exact path=\"/\">\n                     <Home userObj={userObj} />\n                   </Route>\n                   <Route exact path=\"/profile\">\n                     <Profile userObj={userObj} refreshUser={refreshUser} />\n                   </Route>\n                   </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\nexport default AppRouter;","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      }  else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n        refreshUser={refreshUser}\n        isLoggedIn={Boolean(userObj)}\n        userObj={userObj}\n      />\n    ) : (\n      \"기다려주세요 ㅎㅎ ...\"\n    )}\n  </>\n);\n}\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./sytle.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}